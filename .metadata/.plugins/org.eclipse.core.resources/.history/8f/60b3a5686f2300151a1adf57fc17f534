

import java.util.Iterator;
import java.util.List;

import exceptions.DadoInvalidoException;
import exceptions.EntradaException;

public class Veterano extends Jogador {

	public Veterano(String login) throws EntradaException{
		super(login);
	}
	
	@Override
	public int ganhouPartida(String nomeJogo, int scoreObtido, boolean zerou) throws DadoInvalidoException {

		int novoX2p; 
		
		for (Jogo jogo : super.getJogosComprados()) {
			
			if (jogo.getNome().equals(nomeJogo)){
				int x2pExtra = jogo.joga(scoreObtido, zerou);
				int x2pAtual = super.getX2p();
				int recompensa = calculaRecompensa(jogo);
				
				novoX2p = x2pAtual + x2pExtra + recompensa;
				super.setX2p(novoX2p);
			}
		}
	}
	
	public int calculaRecompensa(Jogo jogo){
		int recompensa = (Integer) null;
		
		Iterator<Jogabilidade> iterator = jogo.getJogabilidades().iterator();
		while (iterator.hasNext()){
			Jogabilidade jogabilidade = iterator.next();
			
			if (jogabilidade == Jogabilidade.OFFLINE){
				recompensa = recompensa + 10; 
			} else if (jogabilidade == Jogabilidade.MULTIPLAYER){
				recompensa = recompensa + 20;
			}
		}
		
		return recompensa;
	}
	
	@Override
	public void punir(String nomeJogo, int scoreObtido, boolean zerou) throws DadoInvalidoException{

		int novoX2p;
		
		for (Jogo jogo : super.getJogosComprados()) {
			if (jogo.getNome().equals(nomeJogo)){
				int x2pExtra = jogo.joga(scoreObtido, zerou);
				int x2pAtual = super.getX2p();
				int punicao = calculaPunicao(jogo);
				
				novoX2p = x2pAtual + x2pExtra - punicao;
				super.setX2p(novoX2p);
			}
		}
	}
	
	public int calculaPunicao(Jogo jogo){
		int punicao = (Integer) null;
	
		
		Iterator<Jogabilidade> iterator = jogo.getJogabilidades().iterator();
		while (iterator.hasNext()){
			Jogabilidade jogabilidade = iterator.next();
			
			if (jogabilidade == Jogabilidade.COMPETITIVO){
				punicao = punicao + 20;
			} if (jogabilidade == Jogabilidade.COOPERATIVO) {
				punicao = punicao + 20;
			}	
		}
		
		return punicao;
	}
	
	@Override
	public double calculaDesconto(double jogoPreco){
		double valorCompra = jogoPreco * (1 - 0.2);
		return valorCompra;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (obj instanceof Veterano) {

			Usuario outroUsuario = (Veterano) obj;
			if ( super.getLogin().equals( outroUsuario.getLogin() ) ){
				return true;
			}
		}
		return false;
	}
	
}
